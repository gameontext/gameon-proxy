#Override amalgam's default amalgam8 services.conf to include routes specific to Game On

##DO not edit sections that are enclosed within "DO NOT MODIFY"

##############LOGGING#####################
## Logging requests that transit via the sidecar, as JSON entries.
## If you plan to use the gremlin framework for resilience testing,
## the following fields are a MUST in the JSON log entry:
##  status
##  timestamp_in_ms
##  request_time
##  upstream_response_time
##  gremlin_header_name
##  gremlin_header_val
##  src
##  dst

## You can add any other additional fields to this log entry. Nginx's standard
## variable names can be found in http://nginx.org/en/docs/http/ngx_http_log_module.html

log_format  a8log  '{'
                ## DO NOT MODIFY ######
                '"status":"$status",'
                '"timestamp_in_ms":"$msec",'
                '"request_time":"$request_time",'
                '"upstream_response_time":"$upstream_response_time",'
                '"$a8_trace_key":"$a8_trace_value",'
                '"src": "$a8_source_service:$a8_source_tags",'
                '"dst": "$a8_upstream_name:$a8_upstream_tags",'
                ###########
                ###Add any additional fields here####
                '"message":"$request $status",'
                '"module":"NGINX",'
                '"upstream_addr":"$upstream_addr",'
                '"remote_addr":"$remote_addr",'
                '"request":"$request",'
                '"http_referer":"$http_referer",'
                '"http_user_agent": "$http_user_agent",'
                '"http_x_forwarded_for":"$http_x_forwarded_for"'
               '}';
################END LOGGING###########################


######DO NOT MODIFY#############
map $http_upgrade $connection_upgrade {
  default '';
  websocket upgrade;
}

upstream a8_upstreams {
    server 127.0.0.1:1;
    balancer_by_lua_block {
       amalgam8:load_balance()
    }
   keepalive 64;
}

################################
ssl_session_cache   shared:SSL:10m;
ssl_session_timeout 10m;

### Application proxy
server {
       listen 80;
       listen 443 ssl;

       # eventhough the key and cert are stored in same file, only cert is
       # sent to client
       ssl_certificate /keystore/proxy.pem;
       ssl_certificate_key /keystore/proxy.pem;

       location /rooms {
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;
         proxy_pass http://room:9080;
       }

       location /swagger {
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;
         proxy_pass http://192.168.99.100:8081;
       }

       location ~ ^/(?<service_name>(map|mediator|auth|players))/(?<reqpath>.*) {
         set_by_lua_block $a8_source_service { return amalgam8:get_myname() }
         set_by_lua_block $a8_source_tags { return amalgam8:get_mytags() }
         set $a8_upstream_name nil;
         set $a8_upstream_tags nil;
         set $a8_trace_key nil;
         set $a8_trace_value nil;
         set $a8_service_type 'http';
         set $a8_upstream_host $host;

         access_by_lua_block {
            amalgam8:apply_rules()
         }

         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;

         #proxy_next_upstream error timeout http_503;
         proxy_set_header Host $a8_upstream_host;

         # Add proxy SSL verification directives here:
         # proxy_ssl_trusted_certificate /path/to/trusted_ca_cert_list.crt;
         # proxy_ssl_verify        on;
         # proxy_ssl_verify_depth  2;
         # proxy_ssl_session_reuse on;

	 proxy_pass $a8_service_type://a8_upstreams/$service_name/$reqpath$is_args$args;
         #proxy_pass $a8_service_type://a8_upstreams;
       }

       location / {
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;
         proxy_pass http://webapp:8080;
       }
       
       access_log /var/log/nginx/a8_access.log a8log;
}
